// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace TravelService.Models;

public partial class TravelServiceManagementDBContext : DbContext
{
    public TravelServiceManagementDBContext(DbContextOptions<TravelServiceManagementDBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Category> Categories { get; set; }

    public virtual DbSet<Customer> Customers { get; set; }

    public virtual DbSet<Customer_Order> Customer_Orders { get; set; }

    public virtual DbSet<Employee> Employees { get; set; }

    public virtual DbSet<Tour> Tours { get; set; }

    public virtual DbSet<Tour_Detail> Tour_Details { get; set; }

    public virtual DbSet<Tour_Details_Image> Tour_Details_Images { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Category>(entity =>
        {
            entity.ToTable("Category");

            entity.Property(e => e.name).HasMaxLength(20);
        });

        modelBuilder.Entity<Customer>(entity =>
        {
            entity.ToTable("Customer");

            entity.Property(e => e.address).HasMaxLength(50);
            entity.Property(e => e.email).HasMaxLength(30);
            entity.Property(e => e.name).HasMaxLength(30);
            entity.Property(e => e.password).HasMaxLength(20);
            entity.Property(e => e.phone).HasMaxLength(11);
            entity.Property(e => e.username).HasMaxLength(30);
        });

        modelBuilder.Entity<Customer_Order>(entity =>
        {
            entity.ToTable("Customer_Order");

            entity.Property(e => e.payment).HasMaxLength(30);

            entity.HasOne(d => d.customer).WithMany(p => p.Customer_Orders)
                .HasForeignKey(d => d.customer_id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Customer_Order_Customer");

            entity.HasOne(d => d.tour).WithMany(p => p.Customer_Orders)
                .HasForeignKey(d => d.tour_id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Customer_Order_Tour");
        });

        modelBuilder.Entity<Employee>(entity =>
        {
            entity.ToTable("Employee");

            entity.Property(e => e.address).HasMaxLength(50);
            entity.Property(e => e.email).HasMaxLength(30);
            entity.Property(e => e.name).HasMaxLength(30);
            entity.Property(e => e.password).HasMaxLength(20);
            entity.Property(e => e.phone).HasMaxLength(11);
            entity.Property(e => e.username).HasMaxLength(30);
        });

        modelBuilder.Entity<Tour>(entity =>
        {
            entity.ToTable("Tour");

            entity.Property(e => e.duration).HasMaxLength(30);
            entity.Property(e => e.name).HasMaxLength(50);
            entity.Property(e => e.picture).HasMaxLength(100);

            entity.HasOne(d => d.category).WithMany(p => p.Tours)
                .HasForeignKey(d => d.category_id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Tour_Category");
        });

        modelBuilder.Entity<Tour_Detail>(entity =>
        {
            entity.Property(e => e.code).HasMaxLength(20);
            entity.Property(e => e.start_destination).HasMaxLength(30);
            entity.Property(e => e.transport).HasMaxLength(50);

            entity.HasOne(d => d.tour).WithMany(p => p.Tour_Details)
                .HasForeignKey(d => d.tour_id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Tour_Details_Tour");
        });

        modelBuilder.Entity<Tour_Details_Image>(entity =>
        {
            entity.ToTable("Tour_Details_Image");

            entity.Property(e => e.name).HasMaxLength(100);
            entity.Property(e => e.url).HasMaxLength(100);

            entity.HasOne(d => d.tour_details).WithMany(p => p.Tour_Details_Images)
                .HasForeignKey(d => d.tour_details_id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Tour_Details_Image_Tour_Details");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}
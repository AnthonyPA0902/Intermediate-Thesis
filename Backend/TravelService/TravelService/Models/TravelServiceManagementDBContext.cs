// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace TravelService.Models;

public partial class TravelServiceManagementDBContext : DbContext
{
    public TravelServiceManagementDBContext(DbContextOptions<TravelServiceManagementDBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<BOOKING> BOOKINGs { get; set; }

    public virtual DbSet<CAR> CARs { get; set; }

    public virtual DbSet<FLIGHT> FLIGHTs { get; set; }

    public virtual DbSet<HOTEL> HOTELs { get; set; }

    public virtual DbSet<PLACE> PLACEs { get; set; }

    public virtual DbSet<ROLE> ROLEs { get; set; }

    public virtual DbSet<TOUR> TOURs { get; set; }

    public virtual DbSet<USER> USERs { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<BOOKING>(entity =>
        {
            entity.HasKey(e => new { e.user_id, e.tour_id });

            entity.ToTable("BOOKING");

            entity.Property(e => e.tour_id).ValueGeneratedOnAdd();
            entity.Property(e => e.time).HasColumnType("datetime");

            entity.HasOne(d => d.tour).WithMany(p => p.BOOKINGs)
                .HasForeignKey(d => d.tour_id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_BOOKING_TOUR");

            entity.HasOne(d => d.user).WithMany(p => p.BOOKINGs)
                .HasForeignKey(d => d.user_id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_BOOKING_USER");
        });

        modelBuilder.Entity<CAR>(entity =>
        {
            entity.ToTable("CAR");

            entity.Property(e => e.driver_name).HasMaxLength(50);
            entity.Property(e => e.type).HasMaxLength(40);
        });

        modelBuilder.Entity<FLIGHT>(entity =>
        {
            entity.ToTable("FLIGHT");

            entity.Property(e => e.airline).HasMaxLength(40);
            entity.Property(e => e.arrival).HasColumnType("datetime");
            entity.Property(e => e.code).HasMaxLength(20);
            entity.Property(e => e.departure).HasColumnType("datetime");
            entity.Property(e => e.flight_from).HasMaxLength(50);
            entity.Property(e => e.flight_to).HasMaxLength(50);
        });

        modelBuilder.Entity<HOTEL>(entity =>
        {
            entity.ToTable("HOTEL");

            entity.Property(e => e.adresss).HasMaxLength(50);
            entity.Property(e => e.name).HasMaxLength(50);
        });

        modelBuilder.Entity<PLACE>(entity =>
        {
            entity.ToTable("PLACES");

            entity.Property(e => e.name).HasMaxLength(50);
            entity.Property(e => e.type).HasMaxLength(20);
        });

        modelBuilder.Entity<ROLE>(entity =>
        {
            entity.ToTable("ROLE");

            entity.Property(e => e.name).HasMaxLength(30);
        });

        modelBuilder.Entity<TOUR>(entity =>
        {
            entity.ToTable("TOUR");

            entity.Property(e => e.code).HasMaxLength(20);
            entity.Property(e => e.description).HasMaxLength(200);
            entity.Property(e => e.details).HasMaxLength(100);
            entity.Property(e => e.finish_destination).HasMaxLength(50);
            entity.Property(e => e.start_destination).HasMaxLength(50);

            entity.HasOne(d => d.car).WithMany(p => p.TOURs)
                .HasForeignKey(d => d.car_id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TOUR_CAR");

            entity.HasOne(d => d.flight).WithMany(p => p.TOURs)
                .HasForeignKey(d => d.flight_id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TOUR_FLIGHT");

            entity.HasOne(d => d.hotel).WithMany(p => p.TOURs)
                .HasForeignKey(d => d.hotel_id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TOUR_HOTEL");

            entity.HasOne(d => d.place).WithMany(p => p.TOURs)
                .HasForeignKey(d => d.place_id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TOUR_PLACES");
        });

        modelBuilder.Entity<USER>(entity =>
        {
            entity.ToTable("USER");

            entity.Property(e => e.address).HasMaxLength(50);
            entity.Property(e => e.email).HasMaxLength(20);
            entity.Property(e => e.name).HasMaxLength(50);
            entity.Property(e => e.password).HasMaxLength(30);
            entity.Property(e => e.phone).HasMaxLength(20);
            entity.Property(e => e.username).HasMaxLength(30);

            entity.HasOne(d => d.role).WithMany(p => p.USERs)
                .HasForeignKey(d => d.role_id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_USER_ROLE");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}